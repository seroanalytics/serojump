[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/data_format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Intro 1: Data format for input files","text":"document explains format structure three important data frames used serological studies: data_sero: required data frame containing individual biomarker readings study period. exposure_data: optional data frame stores known exposure information individuals study period. attack_rate_data: required data frame representing empirical probability density function (PDF) attack rate study period. section explains required optional columns data frames provides example.","code":""},{"path":"/articles/data_format.html","id":"main-data-frame-data_sero","dir":"Articles","previous_headings":"","what":"1. Main data frame: data_sero","title":"Intro 1: Data format for input files","text":"primary data frame data_sero must contain following columns: id: integer representing unique identifier individual. time: numeric (real) value representing time biomarker measurement taken. biomarker_column: dynamically named column stores biomarker measurement individual. name column defined variable biomarkers.","code":""},{"path":"/articles/data_format.html","id":"example-for-data_sero","dir":"Articles","previous_headings":"1. Main data frame: data_sero","what":"Example for data_sero","title":"Intro 1: Data format for input files","text":"Note: can multiple biomarkers individual, simply provide columns data name column header name biomarkers.","code":"# Define the biomarker name biomarkers <- \"IgG\"  # Create the data_sero dataframe data_sero <- data.frame(   id = c(1, 1, 2, 2, 3, 3),   time = c(1, 5, 1, 5, 1, 5),   IgG = c(1.2, 2.4, 1.2, 2.4, 3.0, 3.0) )  data_sero ##   id time IgG ## 1  1    1 1.2 ## 2  1    5 2.4 ## 3  2    1 1.2 ## 4  2    5 2.4 ## 5  3    1 3.0 ## 6  3    5 3.0"},{"path":"/articles/data_format.html","id":"optional-data-frame-exposure_data","dir":"Articles","previous_headings":"","what":"2. Optional Data Frame: exposure_data","title":"Intro 1: Data format for input files","text":"exposure_data optional data frame used track known exposure events timing individual. exposure types must match defined variable exposureTypes. exposure something known study effect biomarker measured. Usually known vaccination date, known date infection PCR.","code":""},{"path":"/articles/data_format.html","id":"required-columns","dir":"Articles","previous_headings":"2. Optional Data Frame: exposure_data","what":"Required Columns","title":"Intro 1: Data format for input files","text":"id: integer representing unique identifier individual. time: numeric value representing time exposure recorded. exposure_Type: factor character representing type exposure individual experienced. exposure types must match defined exposureTypes.","code":""},{"path":"/articles/data_format.html","id":"example-for-exposure_data","dir":"Articles","previous_headings":"2. Optional Data Frame: exposure_data","what":"Example for exposure_data","title":"Intro 1: Data format for input files","text":"Note: defined assume known exposures study.","code":"# Define possible exposure types exposureTypes <- c(\"inf\")  # Create the exposure_data dataframe exposure_data <- data.frame(   id = c(1),   time = c(3),   exposure_type = c(\"inf\") )  exposure_data ##   id time exposure_type ## 1  1    3           inf"},{"path":"/articles/data_format.html","id":"required-data-frame-attack_rate_data","dir":"Articles","previous_headings":"","what":"3. Required Data Frame: attack_rate_data","title":"Intro 1: Data format for input files","text":"attack_rate_data data frame represents empirical probability density function (PDF) attack rate study period. contains information likelihood event (infection outbreak) occurring different time points study.","code":""},{"path":"/articles/data_format.html","id":"required-columns-1","dir":"Articles","previous_headings":"3. Required Data Frame: attack_rate_data","what":"Required Columns","title":"Intro 1: Data format for input files","text":"time: numeric value representing time point study period. prob: numeric value representing probability density specific time point, indicating likelihood attack event time.","code":""},{"path":"/articles/data_format.html","id":"example-for-attack_rate_data","dir":"Articles","previous_headings":"3. Required Data Frame: attack_rate_data","what":"Example for attack_rate_data","title":"Intro 1: Data format for input files","text":"Note applied fitted exposure type. defined assume uniform probability infection whole study period.","code":"exposureFitted <- \"inf\"  # Create the attack_rate_data dataframe attack_rate_data <- data.frame(   time = c(1, 2, 3, 4, 5),   prob = c(0.0, 0.33, 0.33, 0.33, 0.0) )  attack_rate_data ##   time prob ## 1    1 0.00 ## 2    2 0.33 ## 3    3 0.33 ## 4    4 0.33 ## 5    5 0.00"},{"path":"/articles/model_define.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"document explains two critical parts model defined provided R code: Observational Model: component models observed data, specifying measured values relate latent (unobserved) processes. Antibody Kinetics Model: component models changes antibody levels time, accounting natural decay (waning) infection-induced changes.","code":""},{"path":"/articles/model_define.html","id":"the-observational-model","dir":"Articles","previous_headings":"","what":"0. The Observational Model","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"","code":"library(devtools) ## Loading required package: usethis library(tidyr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(serojump) ## Warning: replacing previous import 'foreach::when' by 'purrr::when' when ## loading 'serojump' ## Warning: replacing previous import 'foreach::accumulate' by 'purrr::accumulate' ## when loading 'serojump'"},{"path":[]},{"path":"/articles/model_define.html","id":"definition","dir":"Articles","previous_headings":"1. The Observational Model","what":"Definition","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"observational model captures process observed data (PreF case) generated underlying system. defines relationship true (latent) variables observed data.","code":""},{"path":"/articles/model_define.html","id":"code-breakdown","dir":"Articles","previous_headings":"1. The Observational Model","what":"Code Breakdown","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"names = c(\"IgG\"): observed biomarker IgG, representing measurement, biomarker (e.g., antibody concentration). model = makeModel(...): model created using makeModel function, defines observation model constructed. addObservationalModel(\"IgG\", c(\"sigma\"), obsLogLikelihood): line adds observational model IgG, parameter sigma used model noise uncertainty observations. log-likelihood function (obsLogLikelihood) used define observations relate latent variable. prior = bind_rows(...): block defines prior distribution parameter sigma, controls observation noise. add_par_df(\"sigma\", 0.0001, 4, \"unif\", 0.0001, 4): parameter sigma given uniform prior distribution 0.0001 4, indicating model expects certain range variability observed data.","code":"obsLogLikelihood <- function(titre_val, titre_est, pars) {     ll <- dnorm(titre_val, titre_est, pars[1], log = TRUE)     ll }  observationalModel <- list(     names = c(\"IgG\"),     model = makeModel(         addObservationalModel(\"IgG\", c(\"sigma\"), obsLogLikelihood)     ),     prior = bind_rows(         add_par_df(\"sigma\", 0.0001, 4, \"unif\", 0.0001, 4)     ) # observational model, )"},{"path":"/articles/model_define.html","id":"summary","dir":"Articles","previous_headings":"1. The Observational Model","what":"Summary","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"observational model defines IgG variable observed noise, controlled sigma. log-likelihood function helps relate true underlying values observed values, prior sigma assumes uniform uncertainty.","code":""},{"path":[]},{"path":"/articles/model_define.html","id":"definition-1","dir":"Articles","previous_headings":"2. The Antibody Kinetics Model","what":"Definition","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"antibody kinetics model describes antibody levels evolve time response different factors, infection natural waning. model accounts natural decay antibody levels changes due infection.","code":""},{"path":"/articles/model_define.html","id":"code-breakdown-1","dir":"Articles","previous_headings":"2. The Antibody Kinetics Model","what":"Code Breakdown","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"Define antibody kinetic functions Create antibody kinetics model model = makeModel(...): antibody kinetics model built using makeModel, defines two different antibody response models. addAbkineticsModel(\"none\", \"PreF\", \"none\", c(\"wane\"), noInfSerumKinetics): line models antibody kinetics infection. “PreF” biomarker modeled parameter wane, represents natural decay waning antibody levels time. noInfSerumKinetics function describes process. addAbkineticsModel(\"inf\", \"PreF\", \"inf\", c(\"y1_h1\", \"t1_h1\", \"r_h1\", \"s\"), infTuenisPower2016): line models antibody kinetics infection. Several parameters describe response infection: y1_h1: Initial antibody level post-infection. t1_h1: Time peak response. r_h1: Rate antibody decay post-infection. s: Slope decay peak response. infTuenisPower2016: function governing infection-induced antibody response. prior = bind_rows(...): block defines prior distributions model parameters: y1_h1: Uniform prior 1 6, representing initial antibody level infection. t1_h1: Normal prior mean 14 standard deviation 3, representing time peak response. r_h1: Uniform prior 1 5, representing rate antibody decay. s: Uniform prior 0 1, representing slope decay post-infection. wane: Uniform prior 0 1, representing natural waning antibody levels time.","code":"noInfSerumKinetics <- function(titre_est, timeSince, pars) {     titre_est_new <- titre_est - (pars[1] * titre_est) * (timeSince)     titre_est_new <- max(titre_est_new, 0)     titre_est_new }  infTuenisPower2016 <- function(titre_est, timeSince, pars) {      y1 <- pars[1]     t1 <- pars[2]     r <- pars[3]     alpha <- pars[4]      v <- 0.001     mu <- 1 / t1 * y1      if (timeSince < t1) {         titre_est_boost <- exp(mu * timeSince)     } else {         titre_est_boost <- exp(y1) * (1 + (r - 1) * exp(y1)^{r - 1} * v * (timeSince - t1)) ^ {-1 / (r - 1)}     }      titre_est_log <- titre_est + log(titre_est_boost) * max(0, 1 - titre_est * alpha)     titre_est_log  } abkineticsModel <- list(     model = makeModel(         addAbkineticsModel(\"none\", \"IgG\", \"none\", c(\"wane\"), noInfSerumKinetics),         addAbkineticsModel(\"inf\", \"IgG\", \"inf\", c(\"y1_h1\", \"t1_h1\", \"r_h1\", \"s\"), infTuenisPower2016)     ),     prior = bind_rows(         add_par_df(\"y1_h1\", 1, 6, \"unif\",  1, 6),         add_par_df(\"t1_h1\", 3, 14, \"unif\", 3, 14),         add_par_df(\"r_h1\", 1, 5, \"unif\", 1, 5),         add_par_df(\"s\", 0, 1, \"unif\", 0, 1),         add_par_df(\"wane\", 0, 1, \"unif\", 0, 1)     ) )"},{"path":"/articles/model_define.html","id":"summary-1","dir":"Articles","previous_headings":"2. The Antibody Kinetics Model","what":"Summary","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"antibody kinetics model accounts natural waning antibodies absence infection, well antibody response infection. Parameters y1_h1, t1_h1, r_h1 govern kinetics antibody production decay. model uses uniform normal priors specify reasonable ranges parameters.","code":""},{"path":"/articles/model_define.html","id":"full-model-definition","dir":"Articles","previous_headings":"","what":"3. Full model definition","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"R code defines serological model using different components biomarkers, exposure types, observational antibody kinetics models, priors. code creates model definitions (modeldefinition_e1_p1) uses create serological model data analysis (seroModel_phirst_e1_p1).","code":""},{"path":[]},{"path":"/articles/model_define.html","id":"step-1-define-the-first-model-modeldefinition","dir":"Articles","previous_headings":"Step-by-Step Breakdown","what":"Step 1: Define the First Model modeldefinition","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"","code":"# See data_format.Rmd vignette about data input types   biomarkers <- \"IgG\"  # Create the data_sero dataframe data_sero <- data.frame(   id = c(1, 1, 2, 2, 3, 3),   time = c(1, 50, 1, 50, 1, 50),   IgG = c(1.2, 4.4, 1.2, 4.4, 3.0, 3.0) )  # Define possible exposure types exposureTypes <- c(\"none\", \"inf\")  # Create the exposure_data dataframe exposure_data <- data.frame(   id = c(1),   time = c(14),   exposure_type = c(\"inf\") )  exposureFitted <- \"inf\"  # Create the attack_rate_data dataframe attack_rate_data <- data.frame(   time = rep(1:25),   prob = rep(1/25, 25) )  modeldefinition <- list(     biomarkers = biomarkers,     exposureTypes = exposureTypes,     exposureFitted = exposureFitted,     observationalModel = observationalModel,     abkineticsModel = abkineticsModel )  seroModel <- createSeroJumpModel(data_sero, NULL, modeldefinition) ## OUTLINE OF INPUTTED MODEL ## There are  1  measured biomarkers:  IgG  ## There are  2  exposure types in the study period:  none, inf  ## The fitted exposure type is  inf  ## PRIOR DISTRIBUTIONS  ## Prior parameters of observationalModel are:  sigma  ## Prior parameters of abkineticsModel are:  y1_h1, t1_h1, r_h1, s, wane  ## Exposure rate is not defined over the time period. Defaulting to uniform distribution between 1 and  50 ."},{"path":"/articles/model_define.html","id":"run-the-model","dir":"Articles","previous_headings":"","what":"4. Run the model!","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"","code":"save_info <- list(     file_name = \"simple\",     model_name = \"ex1\" )  rj_settings <- list(         numberChainRuns = 4,          iterations = 2000,         burninPosterior = 1000,         thin = 1 )  model_summary <- runInfRJMCMC(seroModel, rj_settings, save_info = save_info) ## --CHECKING SETTINGS LIST-- ## `numberCores` not specified in settings. Default value equal to `numberChainRuns`.  ## `consoleUpdates` not specified in settings. Default value 100.  ## `onAdaptiveCov` not specified in settings. Default value TRUE.  ## `updatesAdaptiveCov` not specified in settings. Default value 100.  ## `burninAdaptiveCov` not specified in settings. Default value 1000.  ## `onAdaptiveTemp` not specified in settings.  Default value TRUE.  ## `updatesAdaptiveTemp` not specified in settings.  Default value 10.  ## `covarInitVal` not specified in settings.  Default value 1e-10.  ## `covarInitValAdapt` not specified in settings.  Default value 1e-10.  ## `covarMaxVal` not specified in settings. Default value 1.  ## `noGibbsSteps` not specified in settings. Default value 1.  ## `runParallel` not specified in settings. Default value TRUE.  ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simple/ex1  ## --CHECKING SETTINGS LIST-- ## Running MCMC-PT iteration number: 0 of 2000. Chain number 1. Current logpost: -1.15742e+06. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 0 of 2000. Chain number 2. Current logpost: -42.796. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 0 of 2000. Chain number 3. Current logpost: -42.5336. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 0 of 2000. Chain number 4. Current logpost: -236.915. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 100 of 2000. Chain number 1. Current logpost: -28.9005. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 100 of 2000. Chain number 2. Current logpost: -27.6631. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 100 of 2000. Chain number 3. Current logpost: -28.4073. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 100 of 2000. Chain number 4. Current logpost: -28.0037. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 200 of 2000. Chain number 1. Current logpost: -25.1954. No exp/inf: 1/0.  ## Running MCMC-PT iteration number: 200 of 2000. Chain number 3. Current logpost: -25.5222. No exp/inf: 1/0.  ## Running MCMC-PT iteration number: 200 of 2000. Chain number 2. Current logpost: -24.9789. No exp/inf: 1/0.  ## Running MCMC-PT iteration number: 200 of 2000. Chain number 4. Current logpost: -29.0603. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 300 of 2000. Chain number 3. Current logpost: -27.8984. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 300 of 2000. Chain number 1. Current logpost: -27.3583. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 300 of 2000. Chain number 2. Current logpost: -29.6639. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 300 of 2000. Chain number 4. Current logpost: -29.0646. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 400 of 2000. Chain number 1. Current logpost: -29.0829. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 400 of 2000. Chain number 3. Current logpost: -27.8936. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 400 of 2000. Chain number 2. Current logpost: -26.7923. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 400 of 2000. Chain number 4. Current logpost: -26.4783. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 500 of 2000. Chain number 1. Current logpost: -27.453. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 500 of 2000. Chain number 3. Current logpost: -27.2322. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 500Running MCMC-PT iteration number:  of 5002000 of . Chain number 20004. Chain number . Current logpost: 2. Current logpost: -26.0374. No exp/inf: -20.45682. No exp/inf: /30/.  ## 0.  ## Running MCMC-PT iteration number: 600 of 2000. Chain number 1. Current logpost: -29.2402. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 600 of 2000. Chain number 4. Current logpost: -20.2212. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 600 of 2000. Chain number 2. Current logpost: -25.5173. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 600 of 2000. Chain number 3. Current logpost: -28.5248. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 700 of 2000. Chain number 4. Current logpost: -20.6186. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 700 of 2000. Chain number 1. Current logpost: -27.7312. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 700 of 2000. Chain number 2. Current logpost: -21.6318. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 700 of 2000. Chain number 3. Current logpost: -24.7376. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 800 of 2000. Chain number 4. Current logpost: -20.5968. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 800 of 2000. Chain number 1. Current logpost: -28.9273. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 800 of 2000. Chain number 2. Current logpost: -20.85. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 800 of 2000. Chain number 3. Current logpost: -26.4636. No exp/inf: 2/0.  ## Running MCMC-PT iteration number: 900 of 2000. Chain number 4. Current logpost: -18.603. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 900 of 2000. Chain number 1. Current logpost: -27.2058. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 900 of 2000. Chain number 2. Current logpost: -22.5367. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 900 of 2000. Chain number 3. Current logpost: -27.6563. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1000 of 2000. Chain number 4. Current logpost: -17.9085. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1000 of 2000. Chain number 1. Current logpost: -29.4511. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1000 of 2000. Chain number 2. Current logpost: -30.2806. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1000 of 2000. Chain number 3. Current logpost: -21.8229. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1100 of 2000. Chain number 4. Current logpost: -16.3682. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1100 of 2000. Chain number 2. Current logpost: -25.7024. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1100 of 2000. Chain number 1. Current logpost: -28.5831. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1100 of 2000. Chain number 3. Current logpost: -15.6741. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1200 of 2000. Chain number 4. Current logpost: -14.2302. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1200 of 2000. Chain number 2. Current logpost: -24.6536. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1200 of 2000. Chain number 1. Current logpost: -27.906. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1200 of 2000. Chain number 3. Current logpost: -17.254. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1300 of 2000. Chain number 4. Current logpost: -6.48505. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: Running MCMC-PT iteration number: 13001300 of 2000. Chain number 1. Current logpost:  of 2000-26.9217. Chain number . No exp/inf: 23. Current logpost: /0Running MCMC-PT iteration number: -20.1182.  ## 1300. No exp/inf:  of 32000/. Chain number 03.  ## . Current logpost: -14.3148. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1400 of 2000. Chain number 4. Current logpost: -4.99528. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1400 of 2000. Chain number 3. Current logpost: -8.18813. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1400 of 2000. Chain number 1. Current logpost: -26.1251. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1400 of 2000. Chain number 2. Current logpost: -19.9081. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1500 of 2000. Chain number 4. Current logpost: -2.49032. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1500 of 2000. Chain number 3. Current logpost: -5.11547. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: Running MCMC-PT iteration number: 15001500 of  of 20002000. Chain number . Chain number 21. Current logpost: . Current logpost: -17.812-21.1825. No exp/inf: . No exp/inf: 23//00.  ## .  ## Running MCMC-PT iteration number: 1600 of 2000. Chain number 4. Current logpost: 5.4052. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1600 of 2000. Chain number 3. Current logpost: -6.3743. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1600 of 2000. Chain number 1. Current logpost: -15.0356. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1600 of 2000. Chain number 2. Current logpost: -21.124. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1700 of 2000. Chain number 4. Current logpost: 6.46586. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1700 of 2000. Chain number 3. Current logpost: -8.83857. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1700 of 2000. Chain number 2. Current logpost: -21.9235. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1700 of 2000. Chain number 1. Current logpost: -10.0761. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1800 of 2000. Chain number 4. Current logpost: 2.94176. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1800 of 2000. Chain number 3. Current logpost: -11.6726. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1800 of 2000. Chain number 2. Current logpost: -22.4717. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1800 of 2000. Chain number 1. Current logpost: -8.01086. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1900 of 2000. Chain number 4. Current logpost: 2.87977. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1900 of 2000. Chain number 3. Current logpost: 0.504319. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1900 of 2000. Chain number 2. Current logpost: -22.5207. No exp/inf: 3/0.  ## Running MCMC-PT iteration number: 1900 of 2000. Chain number 1. Current logpost: -6.30936. No exp/inf: 3/0. ## Loading required package: ggdist"},{"path":"/articles/model_define.html","id":"plot-the-outputs","dir":"Articles","previous_headings":"","what":"5. Plot the outputs","title":"Intro 2: Explanation of observational and antibody kinetics models","text":"model_summary$post posterior distributions user can extract plot !","code":"# Need to have save_info model_summary to run these plotMCMCDiagnosis(model_summary, save_info = save_info) # plots the convergence diagnosis ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simple/ex1  ##  num [1:1000, 1:3] 24.7 24.7 24.7 24.7 24.7 ... ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Loading required package: bayesplot ##  ## This is bayesplot version 1.11.1 ##  ## - Online documentation and vignettes at mc-stan.org/bayesplot ##  ## - bayesplot theme set to bayesplot::theme_default() ##  ##    * Does _not_ affect other ggplot2 plots ##  ##    * See ?bayesplot_theme_set for details on theme setting ##  ## Loading required package: posterior ##  ## This is posterior version 1.6.0 ##  ##  ## Attaching package: 'posterior' ##  ##  ## The following object is masked from 'package:bayesplot': ##  ##     rhat ##  ##  ## The following objects are masked from 'package:stats': ##  ##     mad, sd, var ##  ##  ## The following objects are masked from 'package:base': ##  ##     %in%, match ##  ##  ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Loading required package: data.table ##  ##  ## Attaching package: 'data.table' ##  ##  ## The following objects are masked from 'package:dplyr': ##  ##     between, first, last ## Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. ## ℹ Please explicitly name `id_cols`, like `id_cols = !chain`. ## ℹ The deprecated feature was likely used in the serojump package. ##   Please report the issue to the authors. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. plotPostFigs(model_summary, save_info = save_info) #plots some plots of the posteriors ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simple/ex1 ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## `geom_smooth()` using formula = 'y ~ x' ## waney1_h1 t1_h1 r_h1 s ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## Loading required package: future ## Warning in checkNumberOfLocalWorkers(workers): Careful, you are setting up 8 ## localhost parallel workers with only 4 CPU cores available for this R process ## (per 'system'), which could result in a 200% load. The soft limit is set to ## 100%. Overusing the CPUs has negative impact on the current R process, but also ## on all other processes of yours and others running on the same machine. See ## help(\"parallelly.options\", package = \"parallelly\") for how to override the soft ## and hard limits ##  ##  Get order of all entries,  ## Get exposure ids,  ## Get exposure ids1, ## Adding missing grouping variables: `biomarker` ## Get exposure ids2,  ## Get exposure ids3,  ## Get exposure ids3,  ## Calculate trajectories for for subsets of  none ## Calculate trajectories for for subsets of  High ## [[1]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simple/ex1/figs/post/ab_kinetics_trajectories_none.png\" ##  ## [[2]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simple/ex1/figs/post/ab_kinetics_trajectories_High.png\""},{"path":"/articles/sim_recovery.html","id":"r-code-description","dir":"Articles","previous_headings":"","what":"R Code Description","title":"Case Study 1: Simulation Recovery","text":"document describes steps components provided R code creating running serological models using simulated data. code defines observational models, antibody kinetics models, runs inference using MCMC methods.","code":""},{"path":"/articles/sim_recovery.html","id":"step-1-load-required-libraries","dir":"Articles","previous_headings":"R Code Description","what":"Step 1: Load Required Libraries","title":"Case Study 1: Simulation Recovery","text":"","code":"library(devtools) ## Loading required package: usethis library(tidyr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(magrittr) ##  ## Attaching package: 'magrittr' ## The following object is masked from 'package:tidyr': ##  ##     extract library(serojump) ## Warning: replacing previous import 'foreach::when' by 'purrr::when' when ## loading 'serojump' ## Warning: replacing previous import 'foreach::accumulate' by 'purrr::accumulate' ## when loading 'serojump'"},{"path":"/articles/sim_recovery.html","id":"step-2-read-simulated-data","dir":"Articles","previous_headings":"R Code Description","what":"Step 2: Read Simulated Data","title":"Case Study 1: Simulation Recovery","text":"","code":"modelname_sim <- \"cesCOP_notd\" obs_er <- \"0.5\"  modeli <- readRDS(here::here(\"outputs\", \"sim_data\", modelname_sim, \"inputs.RDS\")) res <- readRDS(file = here::here(\"outputs\", \"sim_data\", modelname_sim, paste0(\"sim_data_\", obs_er, \".rds\"))) data_titre_model <- res$observed_biomarker_states %>% select(i, t, value) %>% rename(id = i, time = t, titre = value)   data_titre_model <- data_titre_model %>% mutate(biomarker = \"sVNT\") %>% as.data.frame %>% rename(sVNT = titre)"},{"path":"/articles/sim_recovery.html","id":"step-3-define-likelihood-and-kinetics-functions","dir":"Articles","previous_headings":"R Code Description","what":"Step 3: Define Likelihood and Kinetics Functions","title":"Case Study 1: Simulation Recovery","text":"","code":"obsLogLikelihood <- function(titre_val, titre_est, pars) {     ll <- dnorm(titre_val, titre_est, pars[1], log = TRUE) }  infSerumKinetics <- function(titre_est, timeSince, pars) {     a <- pars[1]     b <- pars[2]     c <- pars[3]     if (timeSince < 14) {         titre_est <- titre_est + log(exp(a) + exp(c)) * (timeSince) / 14;     } else {         titre_est <- titre_est + log(exp(a) * exp(-b/10 * (timeSince - 14)) + exp(c));     }     titre_est }  noInfSerumKinetics <- function(titre_est, timeSince, pars) {     titre_est_log <- titre_est - pars[1] * (timeSince)     titre_est_log <- max(0, titre_est_log)     titre_est_log }"},{"path":"/articles/sim_recovery.html","id":"step-4-define-the-observational-and-kinetics-models","dir":"Articles","previous_headings":"R Code Description","what":"Step 4: Define the Observational and Kinetics Models","title":"Case Study 1: Simulation Recovery","text":"","code":"# Define the biomarkers and exposure types in the model biomarkers <- c(\"sVNT\") exposureTypes <- c(\"none\", \"inf\") exposureFitted <- \"inf\"  # Define the observational model observationalModel <- list(     names = c(\"sVNT\"),     model = makeModel(         addObservationalModel(\"sVNT\", c(\"sigma\"), obsLogLikelihood)         ), # observational model,     prior = bind_rows(             add_par_df(\"sigma\", 0.0001, 4, \"unif\", 0.0001, 4)     ) )  # Define the antibody kinetics model abkineticsModel <- list(     model = makeModel(             addAbkineticsModel(\"none\", \"sVNT\", \"none\",  c(\"wane\"), noInfSerumKinetics),             addAbkineticsModel(\"inf\", \"sVNT\", \"inf\", c(\"a\", \"b\", \"c\"), infSerumKinetics)         ),     prior = bind_rows(         add_par_df(\"wane\", 0.0, 0.01, \"unif\", 0.0, 0.01), # observational model         add_par_df(\"a\", -6, 6, \"norm\",  2, 2), # ab kinetics         add_par_df(\"b\", 0, 1, \"norm\",  0.3, 0.05), # ab kinetics         add_par_df(\"c\", 0, 4, \"unif\", 0,  4) # ab kinetics      ) )  inf_prior <- function(N, E, I, K) {     N_adj <- N - K     E_adj <- E - K      logPriorExpInf <- lfactorial(E_adj) + lfactorial(N_adj - E_adj) - lfactorial(N_adj )      logPriorExpInf }  modeldefinition_cop <- list(     biomarkers = biomarkers,     exposureTypes = exposureTypes,     exposureFitted = exposureFitted,     observationalModel = observationalModel,     abkineticsModel = abkineticsModel,     expInfPrior = inf_prior )  model_cop <- createSeroJumpModel(data_titre_model, NULL, modeldefinition_cop) ## OUTLINE OF INPUTTED MODEL ## There are  1  measured biomarkers:  sVNT  ## There are  2  exposure types in the study period:  none, inf  ## The fitted exposure type is  inf  ## PRIOR DISTRIBUTIONS  ## Prior parameters of observationalModel are:  sigma  ## Prior parameters of abkineticsModel are:  wane, a, b, c  ## Exposure rate is not defined over the time period. Defaulting to uniform distribution between 1 and  119 ."},{"path":"/articles/sim_recovery.html","id":"step-5-define-the-complete-model","dir":"Articles","previous_headings":"R Code Description","what":"Step 5: Define the Complete Model","title":"Case Study 1: Simulation Recovery","text":"","code":"modelname_sim <- \"cesNoCOP_notd\" obs_er <- \"0.5\"  modeli <- readRDS(here::here(\"outputs\", \"sim_data\", modelname_sim, \"inputs.RDS\")) res <- readRDS(file = here::here(\"outputs\", \"sim_data\", modelname_sim, paste0(\"sim_data_\", obs_er, \".rds\"))) data_titre_model <- res$observed_biomarker_states %>% select(i, t, value) %>% rename(id = i, time = t, titre = value)   data_titre_model <- data_titre_model %>% mutate(biomarker = \"sVNT\") %>% as.data.frame %>% rename(sVNT = titre) obsLogLikelihood <- function(titre_val, titre_est, pars) {     ll <- dnorm(titre_val, titre_est, pars[1], log = TRUE) }  infSerumKinetics <- function(titre_est, timeSince, pars) {     a <- pars[1]     b <- pars[2]     c <- pars[3]     if (timeSince < 14) {         titre_est <- titre_est + log(exp(a) + exp(c)) * (timeSince) / 14;     } else {         titre_est <- titre_est + log(exp(a) * exp(-b/10 * (timeSince - 14)) + exp(c));     }     titre_est }  noInfSerumKinetics <- function(titre_est, timeSince, pars) {     titre_est_log <- titre_est - pars[1] * (timeSince)     titre_est_log <- max(0, titre_est_log)     titre_est_log } # Define the biomarkers and exposure types in the model biomarkers <- c(\"sVNT\") exposureTypes <- c(\"none\", \"inf\") exposureFitted <- \"inf\"  # Define the observational model observationalModel <- list(     names = c(\"sVNT\"),     model = makeModel(         addObservationalModel(\"sVNT\", c(\"sigma\"), obsLogLikelihood)         ), # observational model,     prior = bind_rows(             add_par_df(\"sigma\", 0.0001, 2, \"exp\", 1, NA)     ) )  # Define the antibody kinetics model abkineticsModel <- list(     model = makeModel(             addAbkineticsModel(\"none\", \"sVNT\", \"none\",  c(\"wane\"), noInfSerumKinetics),             addAbkineticsModel(\"inf\", \"sVNT\", \"inf\", c(\"a\", \"b\", \"c\"), infSerumKinetics)         ),     prior = bind_rows(         add_par_df(\"wane\", 0.0, 0.01, \"unif\", 0.0, 0.01), # observational model         add_par_df(\"a\", -6, 6, \"norm\",  2, 2), # ab kinetics         add_par_df(\"b\", 0, 1, \"norm\",  0.3, 0.05), # ab kinetics         add_par_df(\"c\", 0, 4, \"unif\", 0,  4) # ab kinetics      ) )  inf_prior <- function(N, E, I, K) {     N_adj <- N - K     E_adj <- E - K      logPriorExpInf <- lfactorial(E_adj) + lfactorial(N_adj - E_adj) - lfactorial(N_adj )      logPriorExpInf }    modeldefinition_no_cop <- list(     biomarkers = biomarkers,     exposureTypes = exposureTypes,     exposureFitted = exposureFitted,     observationalModel = observationalModel,     abkineticsModel = abkineticsModel,     expInfPrior = inf_prior )  model_no_cop <- createSeroJumpModel(data_titre_model, NULL, modeldefinition_no_cop) ## OUTLINE OF INPUTTED MODEL ## There are  1  measured biomarkers:  sVNT  ## There are  2  exposure types in the study period:  none, inf  ## The fitted exposure type is  inf  ## PRIOR DISTRIBUTIONS  ## Prior parameters of observationalModel are:  sigma  ## Prior parameters of abkineticsModel are:  wane, a, b, c  ## Exposure rate is not defined over the time period. Defaulting to uniform distribution between 1 and  119 . rj_settings <- list(         numberChainRuns = 4,          iterations = 400000,         burninPosterior = 200000,         thin = 1000     )  save_info_cop <- list(     file_name = \"simulated_data\",     model_name = \"cop\" )  save_info_no_cop <- list(     file_name = \"simulated_data\",     model_name = \"no_cop\" )  # Run these but take a while #model_summary_cop <- runInfRJMCMC(model_cop, rj_settings, save_info = save_info_cop) #model_summary_no_cop <- runInfRJMCMC(model_no_cop, rj_settings, save_info = save_info_no_cop)  model_summary_cop <-  readRDS(here::here(\"outputs\", \"fits\", save_info_cop$file_name, save_info_cop$model_name, paste0(\"model_summary.RDS\"))) model_summary_no_cop <-  readRDS(here::here(\"outputs\", \"fits\", save_info_no_cop$file_name, save_info_no_cop$model_name, paste0(\"model_summary.RDS\")))  modelname_sim <- \"cesCOP_notd\" sim_model_cop <- readRDS(here::here(\"outputs\", \"sim_data\", modelname_sim, \"inputs.RDS\")) sim_res_cop <- readRDS(file = here::here(\"outputs\", \"sim_data\", modelname_sim, paste0(\"sim_data_\", \"0.5\", \".rds\")))  plotMCMCDiagnosis(model_summary_cop, save_info = save_info_cop) ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simulated_data/cop  ##  num [1:200, 1:200] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ... ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Loading required package: bayesplot ##  ## This is bayesplot version 1.11.1 ##  ## - Online documentation and vignettes at mc-stan.org/bayesplot ##  ## - bayesplot theme set to bayesplot::theme_default() ##  ##    * Does _not_ affect other ggplot2 plots ##  ##    * See ?bayesplot_theme_set for details on theme setting ##  ## Loading required package: posterior ##  ## This is posterior version 1.6.0 ##  ##  ## Attaching package: 'posterior' ##  ##  ## The following object is masked from 'package:bayesplot': ##  ##     rhat ##  ##  ## The following objects are masked from 'package:stats': ##  ##     mad, sd, var ##  ##  ## The following objects are masked from 'package:base': ##  ##     %in%, match ##  ##  ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Loading required package: data.table ##  ##  ## Attaching package: 'data.table' ##  ##  ## The following objects are masked from 'package:dplyr': ##  ##     between, first, last ## Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. ## ℹ Please explicitly name `id_cols`, like `id_cols = !chain`. ## ℹ The deprecated feature was likely used in the serojump package. ##   Please report the issue to the authors. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. plotPostFigsSim(model_summary_cop, sim_model_cop, sim_res_cop, save_info = save_info_cop) ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simulated_data/cop ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## `geom_smooth()` using formula = 'y ~ x' ## Loading required package: ggdist ## Loading required package: patchwork ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_segment()`). ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_point()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_segment()`). ## Removed 1 row containing missing values or values outside the scale range ## (`geom_point()`). ## Loading required package: future ## Warning in checkNumberOfLocalWorkers(workers): Careful, you are setting up 8 ## localhost parallel workers with only 4 CPU cores available for this R process ## (per 'system'), which could result in a 200% load. The soft limit is set to ## 100%. Overusing the CPUs has negative impact on the current R process, but also ## on all other processes of yours and others running on the same machine. See ## help(\"parallelly.options\", package = \"parallelly\") for how to override the soft ## and hard limits ##  ##  Get order of all entries,  ## Get exposure ids,  ## Get exposure ids1, ## Adding missing grouping variables: `biomarker` ## Get exposure ids2,  ## Get exposure ids3,  ## Get exposure ids3,  ## Calculate trajectories for for subsets of  none ## Calculate trajectories for for subsets of  High ## [[1]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simulated_data/cop/figs/post/ab_kinetics_trajectories_none.png\" ##  ## [[2]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simulated_data/cop/figs/post/ab_kinetics_trajectories_High.png\" modelname_sim <- \"cesNoCOP_notd\" sim_model_no_cop <- readRDS(here::here(\"outputs\", \"sim_data\", modelname_sim, \"inputs.RDS\")) sim_res_no_cop <- readRDS(file = here::here(\"outputs\", \"sim_data\", modelname_sim, paste0(\"sim_data_\", \"0.5\", \".rds\")))  plotMCMCDiagnosis(model_summary_no_cop, save_info = save_info_no_cop) ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simulated_data/no_cop  ##  num [1:200, 1:200] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ... ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Saving 7.29 x 20 in image ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. plotPostFigsSim(model_summary_no_cop, sim_model_no_cop, sim_res_no_cop, save_info = save_info_no_cop) ## --CHECKING SAVE_INFO DATA-- ## Saving model outputs to:  /home/runner/work/serojump/serojump/outputs/fits/simulated_data/no_cop ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## `geom_smooth()` using formula = 'y ~ x' ## Joining with `by = join_by(id)` ## Joining with `by = join_by(id)` ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning in checkNumberOfLocalWorkers(workers): Careful, you are setting up 8 ## localhost parallel workers with only 4 CPU cores available for this R process ## (per 'system'), which could result in a 200% load. The soft limit is set to ## 100%. Overusing the CPUs has negative impact on the current R process, but also ## on all other processes of yours and others running on the same machine. See ## help(\"parallelly.options\", package = \"parallelly\") for how to override the soft ## and hard limits ##  ##  Get order of all entries,  ## Get exposure ids,  ## Get exposure ids1, ## Adding missing grouping variables: `biomarker` ## Get exposure ids2,  ## Get exposure ids3,  ## Get exposure ids3,  ## Calculate trajectories for for subsets of  none ## Calculate trajectories for for subsets of  High ## [[1]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simulated_data/no_cop/figs/post/ab_kinetics_trajectories_none.png\" ##  ## [[2]] ## [1] \"/home/runner/work/serojump/serojump/outputs/fits/simulated_data/no_cop/figs/post/ab_kinetics_trajectories_High.png\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Hodgson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hodgson D (2024). serojump: serological inference package using reversible jump mcmc. R package version 0.1.0.","code":"@Manual{,   title = {serojump: A serological inference package using reversible jump mcmc},   author = {David Hodgson},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A serological inference package using reversible jump mcmc","text":"serojump package provides tools fitting serological models antibody kinetics data using reversible-jump Markov Chain Monte Carlo (RJ-MCMC). enables researchers model dynamics antibody levels response infections, incorporating observational antibody kinetics models. package supports inclusion priors various exposure scenarios, making highly flexible serological data analysis. package ideal researchers looking : Model antibody kinetics time. Estimate infection rates antibody waning using serological data. Perform MCMC inference serological models. best place get started serojump preprint. repo, ceveral model templates provided simplify usage, also allowing users customize models specific research questions.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A serological inference package using reversible jump mcmc","text":"install serojump package, follow steps:","code":""},{"path":"/index.html","id":"step-1-install-r","dir":"","previous_headings":"Installation","what":"Step 1: Install R","title":"A serological inference package using reversible jump mcmc","text":"Make sure R installed system. can download R https://cran.r-project.org/.","code":""},{"path":"/index.html","id":"step-2-install-serojump-from-github","dir":"","previous_headings":"Installation","what":"Step 2: Install serojump from GitHub","title":"A serological inference package using reversible jump mcmc","text":"can install development version serojump GitHub using devtools package. don’t already devtools installed, can install : ```{r} install.packages(“devtools”) devtools::install_github(“seroanalytics/serojump”)","code":"### Step 3: Load `serojump` from GitHub After installation, you can load the serojump package into your R session with:  ```{r}  library(serojump)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A serological inference package using reversible jump mcmc","text":"detailed usage instructions, please refer package vignettes examples. vignettes explain: format data require serojump work, click . define observational models antibody kinetics models run serojump sampler, click . Specify priors models integrate empirical data [coming soon] addition several worked examples serojump : - Simulated data .","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A serological inference package using reversible jump mcmc","text":"welcome contributions suggestions! ’d like contribute serojump package report issues, please feel free : Submit pull request GitHub. Open issue repository. questions feedback, like informative vignettes, can contact package maintainer : David Hodgson Email: david.hodgson@lshtm.ac.uk","code":""},{"path":"/index.html","id":"project-status","dir":"","previous_headings":"","what":"Project Status","title":"A serological inference package using reversible jump mcmc","text":"package actively maintained stable, usable state. New features improvements continually developed.","code":""},{"path":"/reference/abkineticsFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the function form of th antibody kinetics — abkineticsFunction","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"function defined user describes antibody kinetics given model.","code":""},{"path":"/reference/abkineticsFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"titre_est model-estimated titre value observational time inf_status long since last exposur event occured pars fitted parameters needed calculate estimate titre value. defined prior entry abkineticsModel list.","code":""},{"path":"/reference/abkineticsFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"function returns estimate titre value","code":""},{"path":"/reference/abkineticsFunction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"Add information .","code":""},{"path":"/reference/abkineticsFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"Name","code":""},{"path":"/reference/abkineticsFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the function form of th antibody kinetics — abkineticsFunction","text":"","code":"# Example usage: we define two functional form examples, one describing waning until infection, and then the other describing kinetics post infection.  noInfSerumKinetics <- function(titre_est, timeSince, pars) {    titre_est <- titre_est - pars[1] * (timeSince)    titre_est }  infSerumKinetics <- function(titre_est, timeSince, pars) {    a <- pars[1]     b <- pars[2]     c <- pars[3]    if (timeSince < 14) {        titre_est <- titre_est + (log(exp(a) + exp(c)) * (timeSince) / 14) * 1;    } else {        titre_est <- titre_est + (log(exp(a) * exp(-b/10 * (timeSince - 14))) + exp(c)) * 1;    }    titre_est }"},{"path":"/reference/abkineticsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Define antibody kinetics model — abkineticsModel","title":"Define antibody kinetics model — abkineticsModel","text":"data format represents information antibody kinetics","code":""},{"path":"/reference/abkineticsModel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define antibody kinetics model — abkineticsModel","text":"list following columns: names Unique identifier exposure type. model Description model using makeModel addAbkineticsModel functions. prior Description prior distribution using add_par_df function.","code":""},{"path":"/reference/abkineticsModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define antibody kinetics model — abkineticsModel","text":"Add data model .","code":""},{"path":[]},{"path":"/reference/abkineticsModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define antibody kinetics model — abkineticsModel","text":"David Hodgson","code":""},{"path":[]},{"path":"/reference/addAbkineticsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"addAbkineticsModel — addAbkineticsModel","title":"addAbkineticsModel — addAbkineticsModel","text":"function adds antibody kinetics model model definition.","code":""},{"path":"/reference/addAbkineticsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addAbkineticsModel — addAbkineticsModel","text":"","code":"addAbkineticsModel(id, biomarker, exposureType, pars, funcForm)"},{"path":"/reference/addAbkineticsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addAbkineticsModel — addAbkineticsModel","text":"biomarker name biomarker. pars parameters model. funcForm antibody kinetics function. name biomarker. exposureName name exposure type.","code":""},{"path":"/reference/addAbkineticsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"addAbkineticsModel — addAbkineticsModel","text":"list biomarker name, exposure name, whether exposure inferred, parameters antibody kinetics function.","code":""},{"path":"/reference/addCopModel.html","id":null,"dir":"Reference","previous_headings":"","what":"addCopModel — addCopModel","title":"addCopModel — addCopModel","text":"function adds cop model model definition.","code":""},{"path":"/reference/addCopModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addCopModel — addCopModel","text":"","code":"addCopModel(biomarker, exposureType, pars, funcForm, logLikelihood)"},{"path":"/reference/addCopModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addCopModel — addCopModel","text":"biomarker name biomarker. pars parameters model. logLikelihood log likelihood function. exposureName name exposure type.","code":""},{"path":"/reference/addCopModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"addCopModel — addCopModel","text":"list biomarker name, exposure name, parameters log likelihood function.","code":""},{"path":"/reference/addExposurePrior.html","id":null,"dir":"Reference","previous_headings":"","what":"This function adds the exposure prior to the rjmc model. — addExposurePrior","title":"This function adds the exposure prior to the rjmc model. — addExposurePrior","text":"function takes two types priors. Either functional prior empirical prior.","code":""},{"path":"/reference/addExposurePrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function adds the exposure prior to the rjmc model. — addExposurePrior","text":"","code":"addExposurePrior(model_type, data_t, exp_prior, type = NULL)"},{"path":"/reference/addExposurePrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function adds the exposure prior to the rjmc model. — addExposurePrior","text":"model_type rjmc_model created createModelRJCMCFull() data_t data included model created generate_data_t() exp_prior data.frame describing either functional empirical prior type define type exposure prior, func functional 'empirical' empirical. blank assume uniform distribution 1 T.","code":""},{"path":"/reference/addExposurePrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function adds the exposure prior to the rjmc model. — addExposurePrior","text":"returns rjmc model","code":""},{"path":[]},{"path":"/reference/addObservationalModel.html","id":null,"dir":"Reference","previous_headings":"","what":"addObservationalModel — addObservationalModel","title":"addObservationalModel — addObservationalModel","text":"function adds observational model model definition.","code":""},{"path":"/reference/addObservationalModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addObservationalModel — addObservationalModel","text":"","code":"addObservationalModel(biomarker, pars, logLikelihood)"},{"path":"/reference/addObservationalModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addObservationalModel — addObservationalModel","text":"biomarker name biomarker. pars parameters model. logLikelihood log likelihood function.","code":""},{"path":"/reference/addObservationalModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"addObservationalModel — addObservationalModel","text":"list biomarker name, parameters log likelihood function.","code":""},{"path":"/reference/add_par_df.html","id":null,"dir":"Reference","previous_headings":"","what":"add_par_df — add_par_df","title":"add_par_df — add_par_df","text":"function adds information prior parameter rjmc model","code":""},{"path":"/reference/add_par_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_par_df — add_par_df","text":"","code":"add_par_df(...)"},{"path":"/reference/copLogLikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the Log Likelihood function for the COP model — copLogLikelihood","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"function defined user describes COP likelihood data given model.","code":""},{"path":"/reference/copLogLikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"inf_status infection status individual binary (0 1). esttitreExp model-estimated titre value time exposure pars fitted parameters needed calculate log likelihood. defined prior entry copModel list.","code":""},{"path":"/reference/copLogLikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"function returns log likelihood value COP model.","code":""},{"path":"/reference/copLogLikelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"Add information .","code":""},{"path":"/reference/copLogLikelihood.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"Name","code":""},{"path":"/reference/copLogLikelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the Log Likelihood function for the COP model — copLogLikelihood","text":"","code":"# Example usage: copLogLikelihood <- function(inf_status, esttitreExp, params) {    # COP parameters    beta0 <- params[1]    beta1 <- params[2]    p <- 1.0 / (1.0 + exp(- (beta0 + beta1 * esttitreExp) ) )    ll <- inf_status * log(p) + (1 - inf_status) * log(1 - p)    ll }"},{"path":"/reference/createModelRJCMCFull.html","id":null,"dir":"Reference","previous_headings":"","what":"This function create the rjmc model. — createModelRJCMCFull","title":"This function create the rjmc model. — createModelRJCMCFull","text":"taking defined prior distributions, creates rjmc model including support, names parameters, prior pdf, prior smapling function, intial conditions exposure timings adds correlate protection.","code":""},{"path":"/reference/createModelRJCMCFull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function create the rjmc model. — createModelRJCMCFull","text":"","code":"createModelRJCMCFull(ab_ll, par_tab)"},{"path":"/reference/createModelRJCMCFull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function create the rjmc model. — createModelRJCMCFull","text":"ab_ll likelihood functions define function called evaluateLogLikelihood par_tab data.frame describing prior distributions cop_func function correlate protection","code":""},{"path":"/reference/createModelRJCMCFull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function create the rjmc model. — createModelRJCMCFull","text":"returns rjmc model","code":""},{"path":[]},{"path":"/reference/createSeroJumpModel.html","id":null,"dir":"Reference","previous_headings":"","what":"createSeroJumpModel — createSeroJumpModel","title":"createSeroJumpModel — createSeroJumpModel","text":"function creates model serology jump model.","code":""},{"path":"/reference/createSeroJumpModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createSeroJumpModel — createSeroJumpModel","text":"","code":"createSeroJumpModel(   data_sero,   data_known,   modeldefinition,   known_exp_bool = NULL )"},{"path":"/reference/createSeroJumpModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createSeroJumpModel — createSeroJumpModel","text":"data_sero serology data. data_known known exposure data. modeldefinition model definition.","code":""},{"path":"/reference/createSeroJumpModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"createSeroJumpModel — createSeroJumpModel","text":"list data model.","code":""},{"path":"/reference/data_known_exposures_ex1.html","id":null,"dir":"Reference","previous_headings":"","what":"Input the known exposures — data_known_exposures_ex1","title":"Input the known exposures — data_known_exposures_ex1","text":"data format represents serological data used rjmcmc model","code":""},{"path":"/reference/data_known_exposures_ex1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input the known exposures — data_known_exposures_ex1","text":"list following columns: id Unique identifier biomarker. time Time known exposure occurred exposure_type Key type exposure experienced","code":""},{"path":"/reference/data_known_exposures_ex1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input the known exposures — data_known_exposures_ex1","text":"Add data model .","code":""},{"path":[]},{"path":"/reference/data_known_exposures_ex1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Input the known exposures — data_known_exposures_ex1","text":"David Hodgson","code":""},{"path":"/reference/data_known_exposures_ex1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input the known exposures — data_known_exposures_ex1","text":"","code":"# Example usage. For example if you have some information on known vaccinatoins, you can define:  data_known_exposures_ex1 <- data.frame(      id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),      time = c(10, 4, 100, 40, 20, 23, 26, 70, 40, 10),      exposure_type = rep(\"vax\", 10) )"},{"path":"/reference/data_titre_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Input the serological data — data_titre_ex","title":"Input the serological data — data_titre_ex","text":"data format represents serological data used rjmcmc model","code":""},{"path":"/reference/data_titre_ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input the serological data — data_titre_ex","text":"list following columns: id Unique identifier biomarker. time Description model using makeModel addObservationalModel functions. titre Description prior distribution using add_par_df function. biomarker Description prior distribution using add_par_df function.","code":""},{"path":"/reference/data_titre_ex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input the serological data — data_titre_ex","text":"Add data model .","code":""},{"path":[]},{"path":"/reference/data_titre_ex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Input the serological data — data_titre_ex","text":"David Hodgson","code":""},{"path":"/reference/data_titre_ex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input the serological data — data_titre_ex","text":"","code":"# Example usage. For example we can make some summy data for IgG SARS-CoV-2  data_titre <- data.frame(      id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),     time = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),    titre = c(1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4),      biomarker = rep(\"IgG\", 10) )"},{"path":"/reference/generate_data_t.html","id":null,"dir":"Reference","previous_headings":"","what":"This function creates data_t, which is a list of data to use in the rjmc model — generate_data_t","title":"This function creates data_t, which is a list of data to use in the rjmc model — generate_data_t","text":"function requires data_titre_model data.frame user, observed titre data, data_inf_model data.frame user, observed infection data. function create list data use rjmc model.","code":""},{"path":"/reference/generate_data_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function creates data_t, which is a list of data to use in the rjmc model — generate_data_t","text":"","code":"generate_data_t(data_titre_model, data_inf_model = NULL, known_exp = NULL)"},{"path":"/reference/generate_data_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function creates data_t, which is a list of data to use in the rjmc model — generate_data_t","text":"data_titre_model data.frame column headings 'id', 'titre', 'time' 'id' individual, 'titre' titre value 'time' time titre. defined correctly throw error. data_inf_model data.frame column headings 'id', 'inf_time' 'id' individual 'inf_time' time infection. defined assume known infection known_exp add known exposure vector model. defined assume known exposure","code":""},{"path":"/reference/generate_data_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function creates data_t, which is a list of data to use in the rjmc model — generate_data_t","text":"returns list data","code":""},{"path":"/reference/makeModel.html","id":null,"dir":"Reference","previous_headings":"","what":"makeModel — makeModel","title":"makeModel — makeModel","text":"function creates model list observationalModel, copModel, abKineticsModel.","code":""},{"path":"/reference/makeModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makeModel — makeModel","text":"","code":"makeModel(...)"},{"path":"/reference/makeModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makeModel — makeModel","text":"... models include definition.","code":""},{"path":"/reference/makeModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"makeModel — makeModel","text":"list models.","code":""},{"path":"/reference/obsLogLikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the Log Likelihood function for the observational model — obsLogLikelihood","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"function defined user describes observational likelihood data given model.","code":""},{"path":"/reference/obsLogLikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"titre_val titre value data titre_est model-estimate titre value. pars fitted parameters needed calculate log likelihood. defined prior entry observationalModel list.","code":""},{"path":"/reference/obsLogLikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"functoion returns log likelihood value COP model.","code":""},{"path":"/reference/obsLogLikelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"Add information .","code":""},{"path":"/reference/obsLogLikelihood.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"Name","code":""},{"path":"/reference/obsLogLikelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the Log Likelihood function for the observational model — obsLogLikelihood","text":"","code":"# Example usage: obsLogLikelihood = function(titre_val, titre_est, pars) {    if (titre_val <= log10(40)) {        ll <- pcauchy(log10(40), titre_est, pars[1], log.p = TRUE)    } else {        ll <- dcauchy(titre_val, titre_est, pars[1], log = TRUE)    }    ll }"},{"path":"/reference/observationalModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Define observational model — observationalModel","title":"Define observational model — observationalModel","text":"data format represents information observation model","code":""},{"path":"/reference/observationalModel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define observational model — observationalModel","text":"list following columns: names Unique identifier biomarker. model Description model using makeModel addObservationalModel functions. prior Description prior distribution using add_par_df function.","code":""},{"path":"/reference/observationalModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define observational model — observationalModel","text":"Add data model .","code":""},{"path":[]},{"path":"/reference/observationalModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define observational model — observationalModel","text":"David Hodgson","code":""},{"path":"/reference/observationalModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define observational model — observationalModel","text":"","code":"# Example usage. This describes the observation model for a SARS-CoV-2 delta wave using IgG data. First define the log likelihood function, which is cauchy, with a LOD at a titre value of log10(40):  obsFunction = function(ll, titre_val, titre_est, pars) {    if (titre_val <= log10(40)) {        ll <- ll + pcauchy(log10(40), titre_est, pars[1], log.p = TRUE)    } else {        ll <- ll + dcauchy(titre_val, titre_est, pars[1], log = TRUE)    }    ll } # Now define the observation model in the format required for the rjmc package:  observationalModel <- list(     names = c(\"IgG\"),     model = makeModel(addObservationalModel(\"IgG\", c(\"sigma\"), obsFunction)),     prior = add_par_df(\"sigma\", 0.0001, 4, \"unif\", 0.0001, 4) # observational model, )"},{"path":"/reference/plotMCMCDiagnosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess the posteriors of the simulation study — plotMCMCDiagnosis","title":"Postprocess the posteriors of the simulation study — plotMCMCDiagnosis","text":"Postprocess posteriors simulation study","code":""},{"path":"/reference/plotMCMCDiagnosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess the posteriors of the simulation study — plotMCMCDiagnosis","text":"","code":"plotMCMCDiagnosis(model_summary, save_info)"},{"path":"/reference/plotMCMCDiagnosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess the posteriors of the simulation study — plotMCMCDiagnosis","text":"modelname nams model modelname_sim name simulation model obs_er observation error n_chains number chains","code":""},{"path":"/reference/rjmc_sero_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a model — rjmc_sero_func","title":"Create a model — rjmc_sero_func","text":"Create model","code":""},{"path":"/reference/rjmc_sero_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a model — rjmc_sero_func","text":"","code":"rjmc_sero_func(model, data, settings, par = NULL)"},{"path":"/reference/rjmc_sero_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a model — rjmc_sero_func","text":"model model run ptmc. data Data used calibration process settings settings","code":""},{"path":"/reference/rjmc_sero_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a model — rjmc_sero_func","text":"Returns list fist element mcmc samples formatting analysis plottig CODA package. second log posterior value time step.","code":""},{"path":"/reference/runRJMCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"run the RJMCMC algorithm — runRJMCMC","title":"run the RJMCMC algorithm — runRJMCMC","text":"function runs RJMCMC algorithm given defined seroModel, settings filepaths output function runs RJMCMC algorithm given defined seroModel, settings filepaths output function runs RJMCMC algorithm given defined seroModel, settings filepaths output","code":""},{"path":"/reference/runRJMCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run the RJMCMC algorithm — runRJMCMC","text":"","code":"runRJMCMC(seroModel, settings, filename, modelname)  runInfRJMCMCold(seroModel, settings, filename, modelname, priorPred = TRUE)  runInfRJMCMC(seroModel, settings, priorPred = FALSE, save_info = NULL)"},{"path":"/reference/runRJMCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run the RJMCMC algorithm — runRJMCMC","text":"seroModel seroModel previously defined. settings Settings used calibration filename Filepath outputs saved (outputs/fits/filename) modelname Name model outputs (outputs/fits/filename)","code":""},{"path":"/reference/runRJMCMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run the RJMCMC algorithm — runRJMCMC","text":"list posterior samples, model data. list posterior samples, model data. list posterior samples, model data.","code":""}]
